"use strict";(self.webpackChunk_goverment_source=self.webpackChunk_goverment_source||[]).push([[90],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),f=i,m=u["".concat(l,".").concat(f)]||u[f]||p[f]||o;return n?a.createElement(m,r(r({ref:t},d),{},{components:n})):a.createElement(m,r({ref:t},d))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:i,r[1]=s;for(var c=2;c<o;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3969:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var a=n(7462),i=n(3366),o=(n(7294),n(3905)),r=["components"],s={description:"Methodology for the development of a chatbot",sidebar_position:3,last_update:{author:"Nguyen Xuan Nhan"}},l="Methodology",c={unversionedId:"bussiness-scenario/method",id:"bussiness-scenario/method",title:"Methodology",description:"Methodology for the development of a chatbot",source:"@site/docs/bussiness-scenario/method.mdx",sourceDirName:"bussiness-scenario",slug:"/bussiness-scenario/method",permalink:"/GovernmentChatbot/docs/bussiness-scenario/method",draft:!1,editUrl:"https://github.com/foxminchan/GovernmentChatbot/tree/main/apps/docs/docs/bussiness-scenario/method.mdx",tags:[],version:"current",lastUpdatedBy:"Nguyen Xuan Nhan",lastUpdatedAt:1698833127,formattedLastUpdatedAt:"Nov 1, 2023",sidebarPosition:3,frontMatter:{description:"Methodology for the development of a chatbot",sidebar_position:3,last_update:{author:"Nguyen Xuan Nhan"}},sidebar:"tutorialSidebar",previous:{title:"Business Scenario",permalink:"/GovernmentChatbot/docs/bussiness-scenario/bussiness"},next:{title:"User Story",permalink:"/GovernmentChatbot/docs/bussiness-scenario/user-story"}},d={},u=[{value:"Retrieval Augmented Generation (RAG)",id:"retrieval-augmented-generation-rag",level:2},{value:"ChatGPT API",id:"chatgpt-api",level:3},{value:"LangChain (OpenAI)",id:"langchain-openai",level:3},{value:"Weaviate",id:"weaviate",level:3},{value:"Enhanced Observability",id:"enhanced-observability",level:2},{value:"OpenTelemetry",id:"opentelemetry",level:3},{value:"Promtail",id:"promtail",level:3},{value:"Loki",id:"loki",level:3},{value:"Tempo",id:"tempo",level:3},{value:"Grafana",id:"grafana",level:3},{value:"Prometheus",id:"prometheus",level:3},{value:"Benefits of Observability Integration",id:"benefits-of-observability-integration",level:2}],p={toc:u},f="wrapper";function m(e){var t=e.components,s=(0,i.Z)(e,r);return(0,o.kt)(f,(0,a.Z)({},p,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"methodology"},"Methodology"),(0,o.kt)("img",{loading:"lazy",src:n(8588).Z,alt:"methodology",style:{width:"100%",height:"auto"}}),(0,o.kt)("p",{align:"justify"},(0,o.kt)("h2",{id:"retrieval-augmented-generation-rag"},"Retrieval Augmented Generation (RAG)"),(0,o.kt)("p",null,"Retrieval Augmented Generation (RAG) represents an innovative paradigm that harnesses the combined strengths of the ChatGPT API, LangChain, and Weaviate. This sophisticated integration facilitates a seamless amalgamation of information retrieval and content generation, resulting in outputs that are not only accurate and coherent but also infused with creativity and depth. By capitalizing on the individual capabilities of each component, RAG effectively bridges the gap between data-driven precision and the art of nuanced communication, catering to a diverse spectrum of user requirements and preferences."),(0,o.kt)("img",{loading:"lazy",src:n(9265).Z,alt:"retreival augmented generation",style:{width:"100%",height:"auto"}}),(0,o.kt)("h3",{id:"chatgpt-api"},"ChatGPT API"),(0,o.kt)("p",null,"ChatGPT API, developed by OpenAI, is an advanced natural language processing (NLP) model that facilitates human-like interaction and communication. It leverages deep learning techniques to understand and generate text, enabling the development of sophisticated conversational agents and chatbots. Its powerful language generation capabilities allow it to produce coherent and contextually relevant responses, making it an ideal component for facilitating natural and engaging communication within the RAG framework."),(0,o.kt)("h3",{id:"langchain-openai"},"LangChain (OpenAI)"),(0,o.kt)("p",null,"LangChain, a part of OpenAI's suite of language models, serves as a powerful intermediary within the RAG framework, enabling seamless integration and communication between different components. It acts as a bridge, facilitating the transfer of information and data between the ChatGPT API and Weaviate, ensuring a smooth and efficient workflow. LangChain's advanced language processing capabilities enhance the overall performance and interoperability of the RAG system, allowing for a more streamlined and effective generation of content."),(0,o.kt)("h3",{id:"weaviate"},"Weaviate"),(0,o.kt)("p",null,"Weaviate is an innovative knowledge graph system that provides robust data management and retrieval capabilities. It serves as a comprehensive repository for organizing and storing structured and unstructured data, enabling efficient information retrieval and content aggregation within the RAG framework. With its advanced search and query functionalities, Weaviate facilitates the seamless retrieval of relevant and contextually appropriate information, enriching the content generation process and enhancing the overall accuracy and depth of the outputs produced by the RAG system."),(0,o.kt)("h2",{id:"enhanced-observability"},"Enhanced Observability"),(0,o.kt)("p",null,"RAG's enhanced observability is made possible through the integration of the following tools:"),(0,o.kt)("img",{loading:"lazy",src:n(6698).Z,alt:"observability",style:{width:"100%",height:"auto"}}),(0,o.kt)("h3",{id:"opentelemetry"},"OpenTelemetry"),(0,o.kt)("p",null,"OpenTelemetry enables the collection of distributed traces and metrics, providing comprehensive insights into the performance and behavior of the integrated components."),(0,o.kt)("h3",{id:"promtail"},"Promtail"),(0,o.kt)("p",null,"Promtail offers log management capabilities, allowing the centralized collection and processing of log data from various sources."),(0,o.kt)("h3",{id:"loki"},"Loki"),(0,o.kt)("p",null,"Loki, a horizontally scalable, highly available log aggregation system, serves as a powerful backend for Promtail, enabling efficient log storage and querying."),(0,o.kt)("h3",{id:"tempo"},"Tempo"),(0,o.kt)("p",null,"Tempo, a high-volume distributed tracing system, seamlessly integrates with OpenTelemetry to provide end-to-end visibility into the performance of the RAG framework. Its efficient storage and retrieval mechanisms enable the monitoring and analysis of distributed traces, facilitating the identification of potential bottlenecks and performance optimizations."),(0,o.kt)("h3",{id:"grafana"},"Grafana"),(0,o.kt)("p",null,"Grafana, a versatile observability platform, complements the RAG framework by providing a customizable and interactive dashboard for visualizing various metrics and traces collected by OpenTelemetry and Prometheus."),(0,o.kt)("h3",{id:"prometheus"},"Prometheus"),(0,o.kt)("p",null,"Prometheus, a powerful monitoring and alerting toolkit, offers robust data storage and query capabilities for time-series data, allowing the efficient monitoring of key performance indicators and the detection of anomalies within the RAG system."),(0,o.kt)("h2",{id:"benefits-of-observability-integration"},"Benefits of Observability Integration"),(0,o.kt)("p",null,"By seamlessly integrating advanced observability tools into the RAG framework, the system not only ensures the reliability and efficiency of its operations but also enables real-time insights and proactive management of its performance, thereby empowering users to harness the full potential of its capabilities in generating accurate, coherent, and creative outputs.")))}m.isMDXComponent=!0},6698:function(e,t,n){t.Z=n.p+"assets/images/o11y-a7e758c68f1f42506dffcca87767f812.png"},9265:function(e,t,n){t.Z=n.p+"assets/images/rag-perform-bfb774813db24ce078ce8d0f2a5b9867.png"},8588:function(e,t,n){t.Z=n.p+"assets/images/rag-dfb0ce7b9d76a000b9add8a0a070665d.png"}}]);